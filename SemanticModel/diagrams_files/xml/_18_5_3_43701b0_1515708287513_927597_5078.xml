<?xml version="1.0" encoding="UTF-8"?><magicdraw><literalstring classType="LiteralString" humanType="Literal String" icon="diagrams_files/icon_literalstring_1932546331.png" id="_18_5_3_43701b0_1515708287513_927597_5078"><documentation humanName="Documentation"/><name humanName="Name"/><owner classType="Slot" humanName="Owner" humanType="Slot" icon="diagrams_files/icon_slot_186568829.png" mode="e" refid="_18_5_3_43701b0_1515708287513_148546_5077"/><owningSlot classType="Slot" humanName="Owning Slot" humanType="Slot" icon="diagrams_files/icon_slot_186568829.png" refid="_18_5_3_43701b0_1515708287513_148546_5077"/><qualifiedName humanName="Qualified Name"/><text humanName="Text" mode="standard">Too few tag values for tags: {
let slots:Set(Slot) = self.appliedStereotypeInstance.slot-&gt;asSet() in
let df:Set(Property) = slots.definingFeature-&gt;collect(f|f.oclAsType(Property))-&gt;asSet() in
let tags:Set(Property) =  self.appliedStereotypeInstance.classifier.feature
 -&gt;select(f|f.oclIsKindOf(Property))-&gt;collect(f|f.oclAsType(Property))-&gt;asSet()
 -&gt;select(p| (not p.lowerValue.oclIsUndefined()) and (p.lower &gt;= 1) and (p.opposite.oclIsUndefined() or not p.opposite.oclIsKindOf(ExtensionEnd)))
in
 tags-&gt;select(t| (not df-&gt;includes(t)) or (slots-&gt;any(sl| sl.definingFeature = t).value-&gt;size() &lt; t.lower)).name-&gt;asSequence()-&gt;sortedBy(s|s)
}</text><TO_DO humanName="To Do"/><TYPE_MODIFIER humanName="Type Modifier"/><value humanName="Value" mode="s,e">Too few tag values for tags: {
let slots:Set(Slot) = self.appliedStereotypeInstance.slot-&gt;asSet() in
let df:Set(Property) = slots.definingFeature-&gt;collect(f|f.oclAsType(Property))-&gt;asSet() in
let tags:Set(Property) =  self.appliedStereotypeInstance.classifier.feature
 -&gt;select(f|f.oclIsKindOf(Property))-&gt;collect(f|f.oclAsType(Property))-&gt;asSet()
 -&gt;select(p| (not p.lowerValue.oclIsUndefined()) and (p.lower &gt;= 1) and (p.opposite.oclIsUndefined() or not p.opposite.oclIsKindOf(ExtensionEnd)))
in
 tags-&gt;select(t| (not df-&gt;includes(t)) or (slots-&gt;any(sl| sl.definingFeature = t).value-&gt;size() &lt; t.lower)).name-&gt;asSequence()-&gt;sortedBy(s|s)
}</value><visibility humanName="Visibility">public</visibility></literalstring></magicdraw>