<?xml version="1.0" encoding="UTF-8"?><magicdraw><constraint classType="Constraint" humanType="Constraint" icon="diagrams_files/icon_constraint_1273879638.png" id="_12_0_8f90291_1163465300406_285211_707"><APPLIED_STEREOTYPES humanName="Applied Stereotype" mode="e"><stereotype classType="Stereotype" humanType="Stereotype" icon="diagrams_files/icon_stereotype_2041996211.png" name="InvisibleStereotype" refid="_9_0_be00301_1108044721245_236588_411"/><stereotype classType="Stereotype" humanType="Stereotype" icon="diagrams_files/icon_stereotype_2041996211.png" name="validationRule" refid="_11_5_f720368_1159529736746_90611_65"/></APPLIED_STEREOTYPES><appliedStereotype humanName="Applied Stereotype" mode="e"><stereotype classType="Stereotype" humanType="Stereotype" icon="diagrams_files/icon_stereotype_2041996211.png" name="InvisibleStereotype" refid="_9_0_be00301_1108044721245_236588_411"><property classType="Property" humanName="Base_ Element" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="base_Element" refid="_10_0EAPbeta_be00301_1123081772098_411862_275"/></stereotype><stereotype classType="Stereotype" humanType="Stereotype" icon="diagrams_files/icon_stereotype_2041996211.png" name="validationRule" refid="_11_5_f720368_1159529736746_90611_65"><property classType="Property" humanName="Abbreviation" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="abbreviation" refid="_11_5_f720368_1159529748558_465050_89"><String>ActOutEdg</String></property><property classType="Property" humanName="Base_ Constraint" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="base_Constraint" refid="_11_5_f720368_1159529741277_876793_68"/><property classType="Property" humanName="Base_ Constraint" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="base_Constraint" refid="_18_5beta_8760276_1474975117783_731347_4225"/><property classType="Property" humanName="Base_ Constraint" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="base_Constraint" refid="_12_0EAPbeta_f720368_1161678361011_508335_106"/><property classType="Property" humanName="Error Message" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="errorMessage" refid="_11_5_f720368_1159529753480_546197_91"><String>Activity should have outgoing edges: control flows or object flows.</String></property><property classType="Property" humanName="Implementation" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="implementation" refid="_15_1EAPbeta_8f90291_1206013298921_87587_98"/><property classType="Property" humanName="Parent Object" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="parentObject" refid="_17_0_4beta_f980370_1357884272472_635619_2868"/><property classType="Property" humanName="Parent Rule" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="parentRule" refid="_17_0_4beta_f980370_1357883565452_177331_2867"/><property classType="Property" humanName="Severity" humanType="Property" icon="diagrams_files/icon_property_468125573.png" name="severity" refid="_11_5_f720368_1159529761793_335077_93"><enumerationliteral classType="EnumerationLiteral" humanType="Enumeration Literal" icon="diagrams_files/icon_enumerationliteral_526482868.png" name="warning" refid="_11_5_f720368_1159529789933_567569_120"/></property></stereotype></appliedStereotype><appliedStereotypeInstance classType="InstanceSpecification" humanName="Applied Stereotype Instance" humanType="Instance Specification" icon="diagrams_files/icon_instancespecification_910504711.png" name=" : UML Standard Profile::MagicDraw Profile::InvisibleStereotype, UML Standard Profile::Validation Profile::validationRule" refid="_12_0_8f90291_1163465449937_147481_708"/><constrainedElement humanName="Constrained Element" mode="s,e"><class classType="Class" humanType="Class" icon="diagrams_files/icon_class_966745694.png" name="ActivityNode" refid="_9_0_62a020a_1105704892300_640426_8474"/></constrainedElement><context classType="Package" humanName="Context" humanType="Package" icon="diagrams_files/icon_package_2110558717.png" name="UML completeness constraints" refid="_12_0_8f90291_1163453727562_955061_538"/><documentation humanName="Documentation">Activity without outgoing edge</documentation><documentation humanName="Documentation" mode="standard">Activity without outgoing edge</documentation><name humanName="Name" mode="s,e">No Activity Outgoing Edge</name><namespace classType="Package" humanName="Namespace" humanType="Package" icon="diagrams_files/icon_package_2110558717.png" name="UML completeness constraints" refid="_12_0_8f90291_1163453727562_955061_538"/><ownedComment humanName="Owned Comment"><comment classType="Comment" humanType="Comment" icon="diagrams_files/icon_comment_1105641037.png" refid="_12_0_8f90291_1163465695984_45156_716"/></ownedComment><ownedElement humanName="Owned Element"><comment classType="Comment" humanType="Comment" icon="diagrams_files/icon_comment_1105641037.png" refid="_12_0_8f90291_1163465695984_45156_716"/><instancespecification classType="InstanceSpecification" humanType="Instance Specification" icon="diagrams_files/icon_instancespecification_910504711.png" name=" : UML Standard Profile::MagicDraw Profile::InvisibleStereotype, UML Standard Profile::Validation Profile::validationRule" refid="_12_0_8f90291_1163465449937_147481_708"/><opaqueexpression classType="OpaqueExpression" humanType="Opaque Expression" icon="diagrams_files/icon_opaqueexpression_1255445356.png" name="((not appliedStereotypeInstance.oclIsUndefined())  and (not appliedStereotypeInstance.classifier-&gt;exists(name='startEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='ruleStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='multipleStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='timerStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='linkStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='intermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='multipleIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='cancelIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='ruleIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='errorIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='timerIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='gateway')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='eventBasedXOR')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='aND')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='oR')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='complex')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='dataBasedXOR')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='endEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='cancelEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='linkEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='terminateEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='errorEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='task')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='sendTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='scriptTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='userTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='referenceTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='receiveTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='serviceTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='manualTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='usddsderTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='multiInstanceLoop')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='standardLoop')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='subProcess')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='collapsedSubProcess')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='adHoc')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensation')) and not (self.oclIsKindOf(FinalNode) or self.oclIsKindOf(ActivityParameterNode) or self.oclIsKindOf(InputPin) or self.oclIsKindOf(SendSignalAction) or self.oclIsKindOf(AcceptEventAction))) implies (outgoing-&gt;notEmpty() or self.oclAsType(ExecutableNode).handler-&gt;notEmpty() or self.oclAsType(Action).output-&gt;notEmpty())" refid="_12_0_8f90291_1163465636031_924469_711" text="((not appliedStereotypeInstance.oclIsUndefined()) &#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='startEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='ruleStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='multipleStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='timerStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='linkStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='intermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='multipleIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='cancelIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='ruleIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='errorIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='timerIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='gateway'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='eventBasedXOR'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='aND'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='oR'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='complex'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='dataBasedXOR'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='endEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='cancelEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='linkEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='terminateEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='errorEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='task'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='sendTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='scriptTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='userTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='referenceTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='receiveTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='serviceTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='manualTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='usddsderTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='multiInstanceLoop'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='standardLoop'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='subProcess'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='collapsedSubProcess'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='adHoc'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensation'))&#10;and not (self.oclIsKindOf(FinalNode) or self.oclIsKindOf(ActivityParameterNode) or self.oclIsKindOf(InputPin) or self.oclIsKindOf(SendSignalAction) or self.oclIsKindOf(AcceptEventAction))) implies (outgoing-&gt;notEmpty() or self.oclAsType(ExecutableNode).handler-&gt;notEmpty() or self.oclAsType(Action).output-&gt;notEmpty())"/></ownedElement><owner classType="Package" humanName="Owner" humanType="Package" icon="diagrams_files/icon_package_2110558717.png" mode="s,e" name="UML completeness constraints" refid="_12_0_8f90291_1163453727562_955061_538"/><qualifiedName humanName="Qualified Name" mode="e">UML Standard Profile::Validation Profile::UML completeness constraints::No Activity Outgoing Edge</qualifiedName><specification classType="OpaqueExpression" humanName="Specification" humanType="Opaque Expression" icon="diagrams_files/icon_opaqueexpression_1255445356.png" mode="s,e" name="((not appliedStereotypeInstance.oclIsUndefined())  and (not appliedStereotypeInstance.classifier-&gt;exists(name='startEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='ruleStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='multipleStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='timerStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='linkStartEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='intermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='multipleIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='cancelIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='ruleIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='errorIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='timerIntermediateEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='gateway')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='eventBasedXOR')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='aND')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='oR')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='complex')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='dataBasedXOR')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='endEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='cancelEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='linkEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='terminateEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='errorEndEvent')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='task')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='sendTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='scriptTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='userTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='referenceTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='receiveTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='serviceTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='manualTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='usddsderTask')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='multiInstanceLoop')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='standardLoop')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='subProcess')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='collapsedSubProcess')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='adHoc')) and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensation')) and not (self.oclIsKindOf(FinalNode) or self.oclIsKindOf(ActivityParameterNode) or self.oclIsKindOf(InputPin) or self.oclIsKindOf(SendSignalAction) or self.oclIsKindOf(AcceptEventAction))) implies (outgoing-&gt;notEmpty() or self.oclAsType(ExecutableNode).handler-&gt;notEmpty() or self.oclAsType(Action).output-&gt;notEmpty())" refid="_12_0_8f90291_1163465636031_924469_711" text="((not appliedStereotypeInstance.oclIsUndefined()) &#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='startEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='ruleStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='multipleStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='timerStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='linkStartEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='intermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='multipleIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='cancelIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='ruleIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='errorIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='timerIntermediateEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='gateway'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='eventBasedXOR'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='aND'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='oR'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='complex'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='dataBasedXOR'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='endEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='cancelEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='linkEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='messageEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensationEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='terminateEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='errorEndEvent'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='task'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='sendTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='scriptTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='userTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='referenceTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='receiveTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='serviceTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='manualTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='usddsderTask'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='multiInstanceLoop'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='standardLoop'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='subProcess'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='collapsedSubProcess'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='adHoc'))&#10;and (not appliedStereotypeInstance.classifier-&gt;exists(name='compensation'))&#10;and not (self.oclIsKindOf(FinalNode) or self.oclIsKindOf(ActivityParameterNode) or self.oclIsKindOf(InputPin) or self.oclIsKindOf(SendSignalAction) or self.oclIsKindOf(AcceptEventAction))) implies (outgoing-&gt;notEmpty() or self.oclAsType(ExecutableNode).handler-&gt;notEmpty() or self.oclAsType(Action).output-&gt;notEmpty())"/><TO_DO humanName="To Do" mode="s,e"/><visibility humanName="Visibility">public</visibility></constraint></magicdraw>