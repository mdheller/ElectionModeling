<?xml version="1.0" encoding="UTF-8"?><magicdraw><opaqueexpression classType="OpaqueExpression" humanType="Opaque Expression" icon="diagrams_files/icon_opaqueexpression_1255445356.png" id="_12_0_8f90291_1163385500359_266607_463"><body humanName="Body" mode="e"><String>let k : PseudostateKind = self.oclAsType(Pseudostate).kind in
(((self.oclIsKindOf(State) and self.oclAsType(State).submachine.oclIsUndefined() and self.oclAsType(State).region-&gt;isEmpty()
or self.oclIsKindOf(Pseudostate) or self.oclIsKindOf(ConnectionPointReference)) and (not self.oclIsKindOf(ConnectionPointReference)) and (k.oclIsUndefined() or not  (k=PseudostateKind::initial or k=PseudostateKind::entryPoint or k=PseudostateKind::exitPoint))))
implies incoming-&gt;notEmpty()</String></body><documentation humanName="Documentation"/><language humanName="Language" mode="e"><String>OCL2.0</String></language><name humanName="Name"/><owner classType="Constraint" humanName="Owner" humanType="Constraint" icon="diagrams_files/icon_constraint_1273879638.png" mode="s,e" name="No Incoming Transitions" refid="_12_0_8f90291_1163385500343_599055_462"/><owningConstraint classType="Constraint" humanName="Owning Constraint" humanType="Constraint" icon="diagrams_files/icon_constraint_1273879638.png" name="No Incoming Transitions" refid="_12_0_8f90291_1163385500343_599055_462"/><qualifiedName humanName="Qualified Name">UML Standard Profile::Validation Profile::UML completeness constraints::No Incoming Transitions::</qualifiedName><text humanName="Text" mode="standard">let k : PseudostateKind = self.oclAsType(Pseudostate).kind in
(((self.oclIsKindOf(State) and self.oclAsType(State).submachine.oclIsUndefined() and self.oclAsType(State).region-&gt;isEmpty()
or self.oclIsKindOf(Pseudostate) or self.oclIsKindOf(ConnectionPointReference)) and (not self.oclIsKindOf(ConnectionPointReference)) and (k.oclIsUndefined() or not  (k=PseudostateKind::initial or k=PseudostateKind::entryPoint or k=PseudostateKind::exitPoint))))
implies incoming-&gt;notEmpty()</text><TO_DO humanName="To Do" mode="s,e"/><TYPE_MODIFIER humanName="Type Modifier"/><visibility humanName="Visibility">public</visibility></opaqueexpression></magicdraw>