<?xml version="1.0" encoding="UTF-8"?><magicdraw><opaqueexpression classType="OpaqueExpression" humanType="Opaque Expression" icon="diagrams_files/icon_opaqueexpression_1255445356.png" id="_16_5beta1_8f90291_1233244944514_237262_855"><body humanName="Body" mode="e"><String>(not self.appliedStereotypeInstance.oclIsUndefined()) implies
self.appliedStereotypeInstance.classifier-&gt;forAll(c|
    c.feature-&gt;forAll(f|f.oclIsKindOf(Property) implies
        (let sf:Property = f.oclAsType(Property) in
            (not sf.lowerValue.oclIsUndefined()) and (sf.lower &gt;= 1) and (sf.opposite.oclIsUndefined() or not sf.opposite.oclIsKindOf(ExtensionEnd)) implies
            self.appliedStereotypeInstance.slot-&gt;exists(sl|sl.definingFeature=sf and sl.value-&gt;size()&gt;=sf.lower)
        )
    )
)</String></body><documentation humanName="Documentation"/><language humanName="Language" mode="e"><String>OCL2.0</String></language><name humanName="Name"/><owner classType="Constraint" humanName="Owner" humanType="Constraint" icon="diagrams_files/icon_constraint_1273879638.png" mode="s,e" name="Mandatory Slot Value" refid="_16_5beta1_8f90291_1233244944514_953188_849"/><owningConstraint classType="Constraint" humanName="Owning Constraint" humanType="Constraint" icon="diagrams_files/icon_constraint_1273879638.png" name="Mandatory Slot Value" refid="_16_5beta1_8f90291_1233244944514_953188_849"/><qualifiedName humanName="Qualified Name">UML Standard Profile::Validation Profile::UML completeness constraints::Mandatory Slot Value::</qualifiedName><text humanName="Text" mode="standard">(not self.appliedStereotypeInstance.oclIsUndefined()) implies
self.appliedStereotypeInstance.classifier-&gt;forAll(c|
    c.feature-&gt;forAll(f|f.oclIsKindOf(Property) implies
        (let sf:Property = f.oclAsType(Property) in
            (not sf.lowerValue.oclIsUndefined()) and (sf.lower &gt;= 1) and (sf.opposite.oclIsUndefined() or not sf.opposite.oclIsKindOf(ExtensionEnd)) implies
            self.appliedStereotypeInstance.slot-&gt;exists(sl|sl.definingFeature=sf and sl.value-&gt;size()&gt;=sf.lower)
        )
    )
)</text><TO_DO humanName="To Do" mode="s,e"/><TYPE_MODIFIER humanName="Type Modifier"/><visibility humanName="Visibility">public</visibility></opaqueexpression></magicdraw>