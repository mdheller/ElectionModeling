<?xml version="1.0" encoding="UTF-8"?><magicdraw><opaqueexpression classType="OpaqueExpression" humanType="Opaque Expression" icon="diagrams_files/icon_opaqueexpression_1255445356.png" id="_12_0_8f90291_1122006214812_803249_159"><body humanName="Body" mode="e"><String>((not lowerValue.oclIsUndefined()) and (not upperValue.oclIsUndefined())) implies ((lower &lt;= upper) or (upper = -1))</String></body><documentation humanName="Documentation"/><language humanName="Language" mode="e"><String>OCL2.0</String></language><name humanName="Name"/><owner classType="Constraint" humanName="Owner" humanType="Constraint" icon="diagrams_files/icon_constraint_1273879638.png" mode="s,e" name="Lower Multiplicity Value to High" refid="_12_0_8f90291_1122006214812_122488_158"/><owningConstraint classType="Constraint" humanName="Owning Constraint" humanType="Constraint" icon="diagrams_files/icon_constraint_1273879638.png" name="Lower Multiplicity Value to High" refid="_12_0_8f90291_1122006214812_122488_158"/><qualifiedName humanName="Qualified Name">UML Standard Profile::Validation Profile::UML correctness constraints::Lower Multiplicity Value to High::</qualifiedName><text humanName="Text" mode="standard">((not lowerValue.oclIsUndefined()) and (not upperValue.oclIsUndefined())) implies ((lower &lt;= upper) or (upper = -1))</text><TO_DO humanName="To Do" mode="s,e"/><TYPE_MODIFIER humanName="Type Modifier"/><visibility humanName="Visibility">public</visibility></opaqueexpression></magicdraw>